@startuml

    Class Modele {
        
        void Connexion(string pseudo, string motDePasse)
        void Deconnexion()
        void Inscription(string pseudo, string motDePasse, string confirmationMDP, string mail)
    }

    Class Utilisateur {

        - string pseudo
        - string motDePasse
        - string mail
        - string recevoirInvitation

        void setPseudo(string valeur)
        void setMotDePasse(string valeur)
        void setMail(string valeur)
        void demanderInscriptionEvenementPublic(Evenement evenement)

        void creerEvenement(string nom, string description, Date debut, Date fin, string lieu, booleen public, booleen notification, booleen suppAuto)

        void ajouterContact(string pseudo)
        void supprimerContact(string pseudo)
        void accepterNotification(entier identifiant)
        void supprimerNotification(entier identifiant)
        void inviter(Evenement evenement, Utilisateur utilisateur)
        void description(Evenement evenement)
        void supprimerEvenement(Evenement evenement)
        void demanderRejoindreTache(Tache t)
        void modifierContribution(Tache t, entier contribution)

       + Liste<Evenement> getEvenements()
       + Liste<Utilisateur> getContacts()
       + Liste<Notification> getNotifications()
    }

    Enum Droits {

        {static} int propietaire
        {static} int editeur
        {static} int visiteur 
    }

    Class DroitsUtilisateurs

    Class Tache {

        - string nom
        - string description
        - booleen valide

        void inviterUtilisateur(Utilisateur utilisateur)
        void supprimerUtilisateur(Utilisateur utilisateur)
        void modifier(string nom, string description, string valide)
        void valider()
    }

    Class TacheAssignee {

       - entier quantite
    }


    Class Repartition

    Class Evenement {

        - booleen public
        - booleen notification
        - string intitule
        - DatedateDebut
        - DatedateFin
        - string description
        - string lieu
        - booleen suppressionAutomatique

        + Liste<Evenement> getEvenementsPublics()
        + void ajouterTache(Tache tache)
        + void supprimerTache(string nom)
        + Liste<Utilisateur> getParticipants()
        + void ajouterParticipant(Utilisateur participant)
        + void supprimerParticipant(Utilisateur participant)
        + void changerDroits(Utilisateur utilisateur, entier droits)

        + void setPublic(booleen valeur)
        + void setNotification(booleen valeur)
        + void setIntitule(string valeur)
        + void setDescription(string valeur)
        + void setLieu(string valeur)
        + void setDateDebut(Date valeur)
        + void setDateFin(Date valeur)
        + void setSupprAuto(booleen valeur)
    }

    Class Notification {

        - entier identifiant
        - booleen invitation
        - string message
    }

    Class Invitation {

        - booleen accepter

        + void accepterInvitation()
    }

    Utilisateur "0,1" -up- Modele

    TacheAssignee -right-|> Tache 
    Invitation -up-|> Notification

    Utilisateur "1,1" -left- "0,n" Notification 
    Utilisateur "0,n" <-left- Repartition
    Utilisateur "0,n" <-- Utilisateur : Contacts

    Evenement ---left--- "1,1" Invitation
    Evenement *---right--- "0,n" Tache

    Droits "1,n" -right- "0,n" DroitsUtilisateurs

    Utilisateur "1,1" *-down- "0,n" DroitsUtilisateurs
    DroitsUtilisateurs "1,1" o-down- "1,1" Evenement

    Repartition "1,1" <-up- TacheAssignee

@enduml
